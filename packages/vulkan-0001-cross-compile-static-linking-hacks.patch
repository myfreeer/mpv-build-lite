From 5d3c1ef7d81de3139d6522c2446f30c09c74e709 Mon Sep 17 00:00:00 2001
From: shinchiro <shinchiro@users.noreply.github.com>
Date: Wed, 11 Oct 2017 21:25:45 +0800
Subject: [PATCH] loader: cross-compile & static linking hacks

---
 loader/CMakeLists.txt       | 13 +++++--------
 loader/loader.c             |  4 ++--
 loader/loader.h             |  3 +++
 loader/loader.rc            |  4 ++++
 loader/vk_loader_platform.h |  2 +-
 loader/vulkan.pc.in         |  4 ++--
 6 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/loader/CMakeLists.txt b/loader/CMakeLists.txt
index 9c8173f..d103beb 100644
--- a/loader/CMakeLists.txt
+++ b/loader/CMakeLists.txt
@@ -23,7 +23,7 @@ endif()
 if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
     add_definitions(-DVK_USE_PLATFORM_WIN32_KHR -DWIN32_LEAN_AND_MEAN)
     set(DisplayServer Win32)
-    if (NOT MSVC_VERSION LESS 1900)
+    if (MSVC AND NOT MSVC_VERSION LESS 1900)
         # Enable control flow guard
         message(STATUS "Building loader with control flow guard")
         add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/guard:cf>")
@@ -92,7 +92,7 @@ set(ASM_FAILURE_MSG "The build will fall back on building with C code\n")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG}Note that this may be unsafe, as the C code requires tail-call optimizations to remove")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} the stack frame for certain calls. If the compiler does not do this, then unknown device")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} extensions will suffer from a corrupted stack.")
-if (WIN32)
+if (WIN32 AND MSVC)
     enable_language(ASM_MASM)
     if (CMAKE_ASM_MASM_COMPILER_WORKS)
         if (NOT CMAKE_CL_64)
@@ -137,7 +137,7 @@ add_custom_target(loader_gen_files DEPENDS
         vk_loader_extensions.c
     )
 
-if (WIN32)
+if (WIN32 AND MSVC)
     # Use static MSVCRT libraries
     foreach(configuration in CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_RELWITHDEBINFO
                              CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_RELWITHDEBINFO)
@@ -188,9 +188,8 @@ if (WIN32)
 else()
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wpointer-arith")
 
-    add_library(${API_LOWERCASE} SHARED ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
+    add_library(${API_LOWERCASE} STATIC ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
     add_dependencies(${API_LOWERCASE} generate_helper_files loader_gen_files loader_asm_gen_files)
-    set_target_properties(${API_LOWERCASE} PROPERTIES SOVERSION "1" VERSION "1.0.${vk_header_version}")
     target_link_libraries(${API_LOWERCASE} -ldl -lpthread -lm)
 
     if(INSTALL_LVL_FILES)
@@ -201,9 +200,7 @@ else()
     include(FindPkgConfig QUIET)
     if(PKG_CONFIG_FOUND)
         set(VK_API_VERSION "1.0.${vk_header_version}")
-        foreach(LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES} ${PLATFORM_LIBS})
-            set(PRIVATE_LIBS "${PRIVATE_LIBS} -l${LIB}")
-        endforeach()
+        set(PRIVATE_LIBS "${PRIVATE_LIBS} -lshlwapi -lcfgmgr32")
         configure_file("vulkan.pc.in" "vulkan.pc" @ONLY)
         if(INSTALL_LVL_FILES)
             install(FILES       "${CMAKE_CURRENT_BINARY_DIR}/vulkan.pc"
diff --git a/loader/loader.c b/loader/loader.c
index 2e75637..df07e7c 100644
--- a/loader/loader.c
+++ b/loader/loader.c
@@ -48,9 +48,9 @@
 #include "murmurhash.h"
 
 #if defined(_WIN32)
-#include <Cfgmgr32.h>
+#include <cfgmgr32.h>
 #include <initguid.h>
-#include <Devpkey.h>
+#include <devpkey.h>
 #endif
 
 // This is a CMake generated file with #defines for any functions/includes
diff --git a/loader/loader.h b/loader/loader.h
index 43600f9..c202b30 100644
--- a/loader/loader.h
+++ b/loader/loader.h
@@ -44,6 +44,9 @@
 #define LOADER_EXPORT
 #endif
 
+#define CM_GETIDLIST_FILTER_CLASS ( 0x00000200 )
+#define CM_GETIDLIST_FILTER_PRESENT ( 0x00000100 )
+
 // A debug option to disable allocators at compile time to investigate future issues.
 #define DEBUG_DISABLE_APP_ALLOCATORS 0
 
diff --git a/loader/loader.rc b/loader/loader.rc
index 177de20..1c865bf 100755
--- a/loader/loader.rc
+++ b/loader/loader.rc
@@ -43,7 +43,11 @@
 ///////////////////////////////////////////////////////////////////////////////
 ///////////////////////////////////////////////////////////////////////////////
 
+#ifdef __MINGW64__
+#include <winresrc.h>
+#else // MSVC
 #include "winres.h"
+#endif
 
 #define VER_FILE_VERSION            VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH, VERSION_BUILDNO
 
diff --git a/loader/vk_loader_platform.h b/loader/vk_loader_platform.h
index c04d037..8a9ed20 100644
--- a/loader/vk_loader_platform.h
+++ b/loader/vk_loader_platform.h
@@ -24,7 +24,7 @@
 
 #if defined(_WIN32)
 // WinSock2.h must be included *BEFORE* windows.h
-#include <WinSock2.h>
+#include <winsock2.h>
 #endif  // _WIN32
 
 #include "vulkan/vk_platform.h"
diff --git a/loader/vulkan.pc.in b/loader/vulkan.pc.in
index 2ce5aea..6e89703 100644
--- a/loader/vulkan.pc.in
+++ b/loader/vulkan.pc.in
@@ -1,6 +1,6 @@
 prefix=@CMAKE_INSTALL_PREFIX@
-exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+exec_prefix=${prefix}
+libdir=${exec_prefix}/lib
 includedir=${prefix}/include
 
 Name: @CMAKE_PROJECT_NAME@
-- 
2.14.2

