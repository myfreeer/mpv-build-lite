From 9f1cbcb6ddbe3de4e8a14fd3ff0e9c10fb7b152e Mon Sep 17 00:00:00 2001
From: myfreeer <myfreeer@users.noreply.github.com>
Date: Tue, 3 Jul 2018 10:42:39 +0800
Subject: [PATCH] loader: cross-compile & static linking hacks

---
 loader/CMakeLists.txt       | 12 +++++-------
 loader/loader.c             |  8 ++++++--
 loader/loader.rc            |  5 ++++-
 loader/vk_loader_platform.h |  2 +-
 loader/vulkan.pc.in         |  4 ++--
 5 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/loader/CMakeLists.txt b/loader/CMakeLists.txt
index a5bbc1d..d1f7e4f 100644
--- a/loader/CMakeLists.txt
+++ b/loader/CMakeLists.txt
@@ -40,7 +40,7 @@ endif()
 if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
     add_definitions(-DVK_USE_PLATFORM_WIN32_KHR -DWIN32_LEAN_AND_MEAN)
     set(DisplayServer Win32)
-    if(NOT MSVC_VERSION LESS 1900)
+    if (MSVC AND NOT MSVC_VERSION LESS 1900)
         # Enable control flow guard
         message(STATUS "Building loader with control flow guard")
         add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/guard:cf>")
@@ -100,7 +100,7 @@ set(ASM_FAILURE_MSG "The build will fall back on building with C code\n")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG}Note that this may be unsafe, as the C code requires tail-call optimizations to remove")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} the stack frame for certain calls. If the compiler does not do this, then unknown device")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} extensions will suffer from a corrupted stack.")
-if(WIN32)
+if (MSVC AND WIN32)
     enable_language(ASM_MASM)
     if(CMAKE_ASM_MASM_COMPILER_WORKS)
         if(NOT CMAKE_CL_64)
@@ -206,7 +206,7 @@ if(WIN32)
         set_target_properties(vulkan PROPERTIES LINK_FLAGS_DEBUG "/ignore:4098" OUTPUT_NAME vulkan-1)
     else()
         add_library(vulkan STATIC $<TARGET_OBJECTS:loader-opt> $<TARGET_OBJECTS:loader-norm>)
-        set_target_properties(vulkan PROPERTIES OUTPUT_NAME VKstatic.1)
+        set_target_properties(vulkan PROPERTIES OUTPUT_NAME vulkan)
     endif()
 
     if(ENABLE_WIN10_ONECORE)
@@ -283,20 +283,18 @@ else()
         )
 # cmake-format: on
     endif(APPLE)
+endif()
 
     if(NOT APPLE)
         # Generate pkg-config file.
         include(FindPkgConfig QUIET)
         if(PKG_CONFIG_FOUND)
             set(VK_API_VERSION "1.1.${vk_header_version}")
-            foreach(LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES} ${PLATFORM_LIBS})
-                set(PRIVATE_LIBS "${PRIVATE_LIBS} -l${LIB}")
-            endforeach()
+            set(PRIVATE_LIBS "${PRIVATE_LIBS} -lshlwapi -lcfgmgr32")
             configure_file("vulkan.pc.in" "vulkan.pc" @ONLY)
             install(FILES "${CMAKE_CURRENT_BINARY_DIR}/vulkan.pc" DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
         endif()
     endif()
-endif()
 
 install(TARGETS vulkan
         LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
diff --git a/loader/loader.c b/loader/loader.c
index fc56b90..0580297 100644
--- a/loader/loader.c
+++ b/loader/loader.c
@@ -53,9 +53,9 @@
 #include "murmurhash.h"
 
 #if defined(_WIN32)
-#include <Cfgmgr32.h>
+#include <cfgmgr32.h>
 #include <initguid.h>
-#include <Devpkey.h>
+#include <devpkey.h>
 #endif
 
 // This is a CMake generated file with #defines for any functions/includes
@@ -613,6 +613,10 @@ out:
 //
 // *reg_data contains a string list of filenames as pointer.
 // When done using the returned string list, the caller should free the pointer.
+#ifdef __MINGW32__
+#define CM_GETIDLIST_FILTER_PRESENT            (0x00000100)
+#define CM_GETIDLIST_FILTER_CLASS              (0x00000200)
+#endif
 VkResult loaderGetDeviceRegistryFiles(const struct loader_instance *inst, char **reg_data, PDWORD reg_data_size, LPCTSTR value_name) {
     static const wchar_t *softwareComponentGUID = L"{5c4c3332-344d-483c-8739-259e934c9cc8}";
     static const wchar_t *displayGUID = L"{4d36e968-e325-11ce-bfc1-08002be10318}";
diff --git a/loader/loader.rc b/loader/loader.rc
index fca7462..f9f85d0 100755
--- a/loader/loader.rc
+++ b/loader/loader.rc
@@ -42,8 +42,11 @@
 // End of customize section
 ///////////////////////////////////////////////////////////////////////////////
 ///////////////////////////////////////////////////////////////////////////////
-
+#ifdef __MINGW64__
+#include <winresrc.h>
+#else // MSVC
 #include "winres.h"
+#endif
 
 #define VER_FILE_VERSION            VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH, VERSION_BUILDNO
 
diff --git a/loader/vk_loader_platform.h b/loader/vk_loader_platform.h
index 4162560..2a45b64 100644
--- a/loader/vk_loader_platform.h
+++ b/loader/vk_loader_platform.h
@@ -25,7 +25,7 @@
 
 #if defined(_WIN32)
 // WinSock2.h must be included *BEFORE* windows.h
-#include <WinSock2.h>
+#include <winsock2.h>
 #endif  // _WIN32
 
 #include "vulkan/vk_platform.h"
diff --git a/loader/vulkan.pc.in b/loader/vulkan.pc.in
index 2ce5aea..6e89703 100644
--- a/loader/vulkan.pc.in
+++ b/loader/vulkan.pc.in
@@ -1,6 +1,6 @@
 prefix=@CMAKE_INSTALL_PREFIX@
-exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+exec_prefix=${prefix}
+libdir=${exec_prefix}/lib
 includedir=${prefix}/include
 
 Name: @CMAKE_PROJECT_NAME@
-- 
2.17.1

