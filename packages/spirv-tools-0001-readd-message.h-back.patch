From e6e4c2c6fb9cf173d66d1d1797a377f60763eeae Mon Sep 17 00:00:00 2001
From: shinchiro <shinchiro@users.noreply.github.com>
Date: Sun, 19 Aug 2018 06:07:58 +0800
Subject: [PATCH] Re-add message.h back

---
 source/CMakeLists.txt |  1 +
 source/message.cpp    | 54 +++++++++++++++++++++++++++++++++++++++++++
 source/message.h      | 33 ++++++++++++++++++++++++++
 3 files changed, 88 insertions(+)
 create mode 100644 source/message.cpp
 create mode 100644 source/message.h

diff --git a/source/CMakeLists.txt b/source/CMakeLists.txt
index dbb5cb6..d6dd319 100644
--- a/source/CMakeLists.txt
+++ b/source/CMakeLists.txt
@@ -266,6 +266,7 @@ set(SPIRV_SOURCES
   ${CMAKE_CURRENT_SOURCE_DIR}/extensions.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/id_descriptor.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/libspirv.cpp
+  ${CMAKE_CURRENT_SOURCE_DIR}/message.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/name_mapper.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/opcode.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/operand.cpp
diff --git a/source/message.cpp b/source/message.cpp
new file mode 100644
index 0000000..d7e2f3c
--- /dev/null
+++ b/source/message.cpp
@@ -0,0 +1,54 @@
+// Copyright (c) 2016 Google Inc.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+#include "source/message.h"
+
+#include <sstream>
+
+namespace spvtools {
+
+std::string StringifyMessage(spv_message_level_t level, const char* source,
+                             const spv_position_t& position,
+                             const char* message) {
+  const char* level_string = nullptr;
+  switch (level) {
+    case SPV_MSG_FATAL:
+      level_string = "fatal";
+      break;
+    case SPV_MSG_INTERNAL_ERROR:
+      level_string = "internal error";
+      break;
+    case SPV_MSG_ERROR:
+      level_string = "error";
+      break;
+    case SPV_MSG_WARNING:
+      level_string = "warning";
+      break;
+    case SPV_MSG_INFO:
+      level_string = "info";
+      break;
+    case SPV_MSG_DEBUG:
+      level_string = "debug";
+      break;
+  }
+  std::ostringstream oss;
+  oss << level_string << ": ";
+  if (source) oss << source << ":";
+  oss << position.line << ":" << position.column << ":";
+  oss << position.index << ": ";
+  if (message) oss << message;
+  return oss.str();
+}
+
+}  // namespace spvtools
diff --git a/source/message.h b/source/message.h
new file mode 100644
index 0000000..0b1ebd5
--- /dev/null
+++ b/source/message.h
@@ -0,0 +1,33 @@
+// Copyright (c) 2016 Google Inc.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+#ifndef SOURCE_MESSAGE_H_
+#define SOURCE_MESSAGE_H_
+
+#include <string>
+
+#include "spirv-tools/libspirv.h"
+
+namespace spvtools {
+
+// A helper function to compose and return a string from the message in the
+// following format:
+//   "<level>: <source>:<line>:<column>:<index>: <message>"
+std::string StringifyMessage(spv_message_level_t level, const char* source,
+                             const spv_position_t& position,
+                             const char* message);
+
+}  // namespace spvtools
+
+#endif  // SOURCE_MESSAGE_H_
-- 
2.18.0

